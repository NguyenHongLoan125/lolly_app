import 'dart:io';
import 'package:permission_handler/permission_handler.dart';
import 'package:device_info_plus/device_info_plus.dart';

Future<void> requestPhotoPermission() async {
  PermissionStatus status;

  if (Platform.isAndroid) {
    final sdkInt = await _getAndroidSdkInt();
    print('üì± Android SDK version: $sdkInt');

    if (sdkInt >= 33) {
      // Android 13+ y√™u c·∫ßu quy·ªÅn ·∫£nh ri√™ng
      status = await Permission.photos.request(); // ho·∫∑c Permission.mediaLibrary n·∫øu d√πng media kh√°c
    } else {
      // Android < 13 d√πng quy·ªÅn storage truy·ªÅn th·ªëng
      status = await Permission.storage.request();
    }
  } else if (Platform.isIOS) {
    // iOS d√πng quy·ªÅn ·∫£nh
    status = await Permission.photos.request();
  } else {
    print("‚ö†Ô∏è Kh√¥ng h·ªó tr·ª£ platform n√†y: ${Platform.operatingSystem}");
    return;
  }

  // Ghi log t√¨nh tr·∫°ng quy·ªÅn
  print('üîê Tr·∫°ng th√°i quy·ªÅn: $status');
  print(' - isGranted: ${status.isGranted}');
  print(' - isDenied: ${status.isDenied}');
  print(' - isPermanentlyDenied: ${status.isPermanentlyDenied}');
  print(' - isRestricted: ${status.isRestricted}');

  // X·ª≠ l√Ω logic quy·ªÅn
  if (status.isGranted) {
    print('‚úÖ Quy·ªÅn ƒë√£ ƒë∆∞·ª£c c·∫•p');
  } else if (status.isDenied) {
    print('‚ùå Quy·ªÅn b·ªã t·ª´ ch·ªëi (t·∫°m th·ªùi)');
  } else if (status.isPermanentlyDenied || status.isRestricted) {
    print('‚ö†Ô∏è Quy·ªÅn b·ªã t·ª´ ch·ªëi vƒ©nh vi·ªÖn ho·∫∑c b·ªã h·∫°n ch·∫ø ‚Äî m·ªü c√†i ƒë·∫∑t');
    await openAppSettings();
  }
}

Future<int> _getAndroidSdkInt() async {
  try {
    final deviceInfo = DeviceInfoPlugin();
    final androidInfo = await deviceInfo.androidInfo;
    return androidInfo.version.sdkInt;
  } catch (e) {
    print('‚ùå L·ªói khi l·∫•y SDK version: $e');
    return 0; // fallback
  }
}